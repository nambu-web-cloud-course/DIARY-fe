{"ast":null,"code":"var _jsxFileName = \"D:\\\\DIARY-fe-new\\\\src\\\\page\\\\login\\\\Login.js\",\n  _s = $RefreshSig$();\n// //로그인 페이지\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n\n// export default function Login({ setIsLoggedIn }) {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   const navigate = useNavigate();\n\n//   const handleLogin = () => {\n//     // 입력 상자의 값 초기화\n//     setUsername('');\n//     setPassword('');\n\n//     if (!username || !password) {\n//       setErrorMessage('아이디와 비밀번호를 모두 입력하세요.');\n//       setTimeout(() => {  // 1초 후 메시지 사라짐\n//         setErrorMessage(''); \n//       }, 1000); \n\n//     //test를 위해 임시로 id/ pw 설정함\n//     } else if (username === 'user1' && password === '1234') {\n//       // 아이디와 비밀번호가 일치하면 로그인 성공\n//       setIsLoggedIn(true);\n//       window.alert('로그인하였습니다. 홈으로 이동합니다');\n\n//       setTimeout(() => {\n//         navigate('/home'); \n//       }, 500); // 홈으로 0.5초 후 이동\n//     } else {\n//     window.alert('아이디 또는 비밀번호가 일치하지 않습니다. 다시 시도하세요.');\n\n//       setTimeout(() => {\n//         setErrorMessage(''); \n//       }, 1000); // 1초 후 메시지를 사라짐\n\n//     }\n//   };\n\n//   return (\n//     <div className=\"page-login\">\n//       <div className=\"form-login\">\n//         <div className=\"ui-logo\">\n//           <a class=\"txt-logo\" href=\"/\">D.I.A.R.Y</a>\n//         </div>\n//         <h2 className=\"txt-label\">로그인</h2>\n//         <div className=\"form-div\">\n//           <input type=\"text\" placeholder=\"아이디\" value={username} \n//             onChange={(e) => setUsername(e.target.value)} className=\"form-input\"/>\n\n//           <input type=\"password\" placeholder=\"비밀번호\" value={password} \n//             onChange={(e) => setPassword(e.target.value)} className=\"form-input\"/>\n\n//   {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//         </div>\n//         <button onClick={handleLogin} className=\"form-button\">로그인</button>\n\n//         <Link to=\"/register\" className=\"form-button\">회원가입</Link>\n\n//         <p>\n\n//           {/* <a href=\"http://localhost:3000/changepw\" target=\"_blank\" rel=\"noreferrer\"\n//             onClick={() => window.open(\"http://localhost:3000/changepw\", \n//             \"_blank\", \"width=400, height=400\")}> \n//           비밀번호 변경\n//           </a> */}\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useCookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  setIsLoggedIn\n}) {\n  _s();\n  const [member_name, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const [cookies, setCookie, removeCookie] = useCookies(['jwtToken']);\n  const handleLogin = async () => {\n    try {\n      if (!member_name || !password) {\n        setErrorMessage('아이디와 비밀번호를 모두 입력하세요.');\n        setTimeout(() => {\n          // 입력 상자의 값 초기화\n          setErrorMessage('');\n          setUsername('');\n          setPassword('');\n        }, 1000); // 1초 후 메시지 사라짐\n        return;\n      }\n      const response = await axios.post('/api/login', {\n        member_name,\n        password\n      });\n      if (response.data.token) {\n        // JWT 토큰을 쿠키에 저장 (1일 만료)\n        setCookie('jwtToken', response.data.token, {\n          path: '/',\n          maxAge: 86400\n        });\n        setIsLoggedIn(true);\n        window.alert('로그인되었습니다. 홈으로 이동합니다');\n        setTimeout(() => {\n          navigate('/home');\n        }, 500); // 홈으로 0.5초 후 이동\n      } else {\n        setErrorMessage('아이디 또는 비밀번호가 일치하지 않습니다.');\n        setUsername('');\n        setPassword('');\n      }\n    } catch (error) {\n      console.error('로그인 오류:', error);\n      window.alert('로그인 중 오류가 발생했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // // 로그아웃 시 JWT 토큰 삭제\n  // const handleLogout = () => {\n  // // 로컬 스토리지에서 JWT 토큰 삭제\n  //   localStorage.removeItem('token');\n\n  //   setIsLoggedIn(false);\n  //   window.alert('로그아웃하였습니다.');\n  //   navigate('http://localhost:3000/login');\n  // }\n\n  const openChangePwWindow = () => {\n    window.open('http://localhost:3000/changepw', '_blank', 'width=400, height=400');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uB85C\\uACE0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: member_name,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785 | \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openChangePwWindow,\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"eBDS7xhb1Z2goid08gi6LVqx0bw=\", false, function () {\n  return [useNavigate, useCookies];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","axios","useCookies","jsxDEV","_jsxDEV","Login","setIsLoggedIn","_s","member_name","setUsername","password","setPassword","errorMessage","setErrorMessage","navigate","cookies","setCookie","removeCookie","handleLogin","setTimeout","response","post","data","token","path","maxAge","window","alert","error","console","openChangePwWindow","open","children","to","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","_c","$RefreshReg$"],"sources":["D:/DIARY-fe-new/src/page/login/Login.js"],"sourcesContent":["// //로그인 페이지\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n\n// export default function Login({ setIsLoggedIn }) {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   const navigate = useNavigate();\n\n//   const handleLogin = () => {\n//     // 입력 상자의 값 초기화\n//     setUsername('');\n//     setPassword('');\n\n//     if (!username || !password) {\n//       setErrorMessage('아이디와 비밀번호를 모두 입력하세요.');\n//       setTimeout(() => {  // 1초 후 메시지 사라짐\n//         setErrorMessage(''); \n//       }, 1000); \n      \n//     //test를 위해 임시로 id/ pw 설정함\n//     } else if (username === 'user1' && password === '1234') {\n//       // 아이디와 비밀번호가 일치하면 로그인 성공\n//       setIsLoggedIn(true);\n//       window.alert('로그인하였습니다. 홈으로 이동합니다');\n\n//       setTimeout(() => {\n//         navigate('/home'); \n//       }, 500); // 홈으로 0.5초 후 이동\n//     } else {\n//     window.alert('아이디 또는 비밀번호가 일치하지 않습니다. 다시 시도하세요.');\n    \n//       setTimeout(() => {\n//         setErrorMessage(''); \n//       }, 1000); // 1초 후 메시지를 사라짐\n      \n//     }\n//   };\n\n\n//   return (\n//     <div className=\"page-login\">\n//       <div className=\"form-login\">\n//         <div className=\"ui-logo\">\n//           <a class=\"txt-logo\" href=\"/\">D.I.A.R.Y</a>\n//         </div>\n//         <h2 className=\"txt-label\">로그인</h2>\n//         <div className=\"form-div\">\n//           <input type=\"text\" placeholder=\"아이디\" value={username} \n//             onChange={(e) => setUsername(e.target.value)} className=\"form-input\"/>\n\n//           <input type=\"password\" placeholder=\"비밀번호\" value={password} \n//             onChange={(e) => setPassword(e.target.value)} className=\"form-input\"/>\n\n//   {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//         </div>\n//         <button onClick={handleLogin} className=\"form-button\">로그인</button>\n     \n//         <Link to=\"/register\" className=\"form-button\">회원가입</Link>\n\n//         <p>\n           \n//           {/* <a href=\"http://localhost:3000/changepw\" target=\"_blank\" rel=\"noreferrer\"\n//             onClick={() => window.open(\"http://localhost:3000/changepw\", \n//             \"_blank\", \"width=400, height=400\")}> \n//           비밀번호 변경\n//           </a> */}\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useCookies } from 'react-cookie';\n\nexport default function Login({ setIsLoggedIn }) {\n  const [member_name, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const navigate = useNavigate();\n  const [cookies, setCookie, removeCookie] = useCookies(['jwtToken']);\n\n  const handleLogin = async () => {\n    try {\n      if (!member_name || !password) {\n        setErrorMessage('아이디와 비밀번호를 모두 입력하세요.');\n        setTimeout(() => {\n          // 입력 상자의 값 초기화\n          setErrorMessage('');\n          setUsername('');\n          setPassword('');\n        }, 1000);// 1초 후 메시지 사라짐\n        return;\n      }\n\n      const response = await axios.post('/api/login', {\n        member_name,\n        password,\n      });\n\n      if (response.data.token) {\n        // JWT 토큰을 쿠키에 저장 (1일 만료)\n        setCookie('jwtToken', response.data.token, { path: '/', maxAge: 86400 });\n\n        setIsLoggedIn(true);\n        window.alert('로그인되었습니다. 홈으로 이동합니다');\n\n        setTimeout(() => {\n          navigate('/home');\n        }, 500);// 홈으로 0.5초 후 이동\n      } else {\n        setErrorMessage('아이디 또는 비밀번호가 일치하지 않습니다.');\n        setUsername('');\n        setPassword('');\n      }\n    } catch (error) {\n      console.error('로그인 오류:', error);\n      window.alert('로그인 중 오류가 발생했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // // 로그아웃 시 JWT 토큰 삭제\n  // const handleLogout = () => {\n  // // 로컬 스토리지에서 JWT 토큰 삭제\n  //   localStorage.removeItem('token');\n\n  //   setIsLoggedIn(false);\n  //   window.alert('로그아웃하였습니다.');\n  //   navigate('http://localhost:3000/login');\n  // }\n\n  const openChangePwWindow = () => {\n    window.open('http://localhost:3000/changepw', '_blank', 'width=400, height=400');\n  };\n\n  return (\n    <div>\n      <Link to=\"/home\"><h1>로고</h1></Link>\n      <br/><br/>\n      <h2>로그인</h2>\n\n      <input\n        type=\"text\"\n        placeholder=\"아이디\"\n        value={member_name}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <br />\n\n      <input\n        type=\"password\"\n        placeholder=\"비밀번호\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <br />\n\n      <button onClick={handleLogin}>로그인</button>\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n      <p>\n        <Link to=\"/register\">회원가입 | </Link> {' '}\n        <button onClick={openChangePwWindow}>비밀번호 변경</button>\n      </p>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}