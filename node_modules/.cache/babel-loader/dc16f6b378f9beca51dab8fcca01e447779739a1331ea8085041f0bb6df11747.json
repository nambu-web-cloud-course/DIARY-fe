{"ast":null,"code":"var _jsxFileName = \"D:\\\\DIARY-fe\\\\DIARY-fe\\\\src\\\\page\\\\login\\\\ChangePw.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PasswordReset() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n  const handleChangePassword = async () => {\n    if (newPassword !== confirmNewPassword) {\n      setMessage('새 비밀번호와 확인 비밀번호가 일치하지 않습니다.');\n    } else {\n      try {\n        const response = await axios.post('/api/password-reset', {\n          username,\n          newPassword\n        });\n        if (response.data.success) {\n          setMessage('비밀번호 변경에 성공했습니다.');\n          setTimeout(() => {\n            setMessage('');\n            alert('비밀번호가 변경되었습니다. 로그인 페이지로 이동합니다.');\n            window.location.href = '/login'; // 로그인 페이지로 이동\n          }, 1000);\n        } else {\n          setMessage('비밀번호 변경에 실패했습니다.');\n        }\n      } catch (error) {\n        setMessage('비밀번호 변경 중 오류가 발생했습니다.');\n      }\n    }\n  };\n  const handleNewPasswordChange = newPassword => {\n    setNewPassword(newPassword);\n    if (newPassword === confirmNewPassword) {\n      setMessage('비밀번호가 일치합니다.');\n      setIsButtonDisabled(false);\n    } else {\n      setMessage('비밀번호가 일치하지 않습니다.');\n      setIsButtonDisabled(true);\n    }\n  };\n  const handleConfirmNewPasswordChange = confirmNewPassword => {\n    setConfirmNewPassword(confirmNewPassword);\n    if (newPassword === confirmNewPassword) {\n      setMessage('비밀번호가 일치합니다.');\n      setIsButtonDisabled(false);\n    } else {\n      setMessage('비밀번호가 일치하지 않습니다.');\n      setIsButtonDisabled(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\",\n      value: newPassword,\n      onChange: e => handleNewPasswordChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      value: confirmNewPassword,\n      onChange: e => handleConfirmNewPasswordChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleChangePassword,\n      disabled: isButtonDisabled,\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(PasswordReset, \"d2laJiiTBQYXxGs/k9FSY2AWBxE=\");\n_c = PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PasswordReset","_s","username","setUsername","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","message","setMessage","isButtonDisabled","setIsButtonDisabled","handleChangePassword","response","post","data","success","setTimeout","alert","window","location","href","error","handleNewPasswordChange","handleConfirmNewPasswordChange","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/DIARY-fe/DIARY-fe/src/page/login/ChangePw.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function PasswordReset() {\r\n  const [username, setUsername] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\r\n\r\n  const handleChangePassword = async () => {\r\n    if (newPassword !== confirmNewPassword) {\r\n      setMessage('새 비밀번호와 확인 비밀번호가 일치하지 않습니다.');\r\n    } else {\r\n      try {\r\n        const response = await axios.post('/api/password-reset', {\r\n          username,\r\n          newPassword,\r\n        });\r\n\r\n        if (response.data.success) {\r\n          setMessage('비밀번호 변경에 성공했습니다.');\r\n          setTimeout(() => {\r\n            setMessage('');\r\n            alert('비밀번호가 변경되었습니다. 로그인 페이지로 이동합니다.');\r\n            window.location.href = '/login'; // 로그인 페이지로 이동\r\n          }, 1000);\r\n        } else {\r\n          setMessage('비밀번호 변경에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        setMessage('비밀번호 변경 중 오류가 발생했습니다.');\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleNewPasswordChange = (newPassword) => {\r\n    setNewPassword(newPassword);\r\n    if (newPassword === confirmNewPassword) {\r\n      setMessage('비밀번호가 일치합니다.');\r\n      setIsButtonDisabled(false);\r\n    } else {\r\n      setMessage('비밀번호가 일치하지 않습니다.');\r\n      setIsButtonDisabled(true);\r\n    }\r\n  };\r\n\r\n  const handleConfirmNewPasswordChange = (confirmNewPassword) => {\r\n    setConfirmNewPassword(confirmNewPassword);\r\n    if (newPassword === confirmNewPassword) {\r\n      setMessage('비밀번호가 일치합니다.');\r\n      setIsButtonDisabled(false);\r\n    } else {\r\n      setMessage('비밀번호가 일치하지 않습니다.');\r\n      setIsButtonDisabled(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>비밀번호 변경</h2>\r\n      <input type=\"text\" placeholder=\"아이디\" value={username} \r\n        onChange={(e) => setUsername(e.target.value)} />\r\n      <br />\r\n\r\n      <input type=\"password\" placeholder=\"새 비밀번호\" value={newPassword} \r\n        onChange={(e) => handleNewPasswordChange(e.target.value)} />\r\n      <br />\r\n\r\n      <input type=\"password\" placeholder=\"새 비밀번호 확인\" value={confirmNewPassword} \r\n        onChange={(e) => handleConfirmNewPasswordChange(e.target.value)} />\r\n      <br />\r\n      \r\n      <button onClick={handleChangePassword} disabled={isButtonDisabled}>\r\n        비밀번호 변경\r\n      </button>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}