[{"/Users/heppy-family/Desktop/diary/DIARY-fe/src/index.js":"1","/Users/heppy-family/Desktop/diary/DIARY-fe/src/App.js":"2","/Users/heppy-family/Desktop/diary/DIARY-fe/src/reportWebVitals.js":"3","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/layout/Header.js":"4","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/routes/RoutesPage.js":"5","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/gallary/Gallary.js":"6","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/diary/Diary.js":"7","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/calendar/CalendarPage.js":"8","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/login/Register.js":"9","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/main/Main.js":"10","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/todolist/Todolist.js":"11","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/login/Login.js":"12","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/login/ChangePw.js":"13","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/calendar/CalendarForm.js":"14"},{"size":535,"mtime":1700117064049,"results":"15","hashOfConfig":"16"},{"size":261,"mtime":1700117064048,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1700117064053,"results":"18","hashOfConfig":"16"},{"size":1429,"mtime":1700117064050,"results":"19","hashOfConfig":"16"},{"size":992,"mtime":1700117064052,"results":"20","hashOfConfig":"16"},{"size":827,"mtime":1700117244136,"results":"21","hashOfConfig":"16"},{"size":1866,"mtime":1700117064050,"results":"22","hashOfConfig":"16"},{"size":1848,"mtime":1700117064050,"results":"23","hashOfConfig":"16"},{"size":4757,"mtime":1700117064052,"results":"24","hashOfConfig":"16"},{"size":2047,"mtime":1700117374765,"results":"25","hashOfConfig":"16"},{"size":6132,"mtime":1700117064053,"results":"26","hashOfConfig":"16"},{"size":2954,"mtime":1700117064051,"results":"27","hashOfConfig":"16"},{"size":2723,"mtime":1700117064051,"results":"28","hashOfConfig":"16"},{"size":311,"mtime":1700117064050,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ckemb4",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/heppy-family/Desktop/diary/DIARY-fe/src/index.js",[],[],"/Users/heppy-family/Desktop/diary/DIARY-fe/src/App.js",["80","81","82","83"],[],"\nimport './App.css';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\nimport Header from './page/layout/Header';\n\n\nfunction App() {\n  return (\n    <div className=\"wrap-page\">\n      <Header></Header>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/heppy-family/Desktop/diary/DIARY-fe/src/reportWebVitals.js",[],[],"/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/layout/Header.js",["84","85","86","87","88"],[],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Calendar from 'react-calendar';\nimport { Link, NavLink} from \"react-router-dom\";\nimport RoutesPage from \"../routes/RoutesPage\"\n\nfunction Header() {\n\n  return (\n    <>\n    <BrowserRouter>\n        <div className=\"layout-header\">\n            {/* Header Top */}\n            <div className=\"header-top\">\n                <Link to=\"/\" className=\"txt-logo\">D.I.A.R.Y</Link>\n            \n                <div className=\"ui-right\">\n                <div className=\"data-id\">User id</div>\n                <Link to=\"/login\" className=\"link-login\">로그인</Link>\n                \n                </div>\n            </div>\n            <div className=\"header-menu\" >\n                <NavLink to=\"/todolist\" className={({ isActive }) => (isActive ?  \" is-selected \" : \"\")}>Todo 리스트</NavLink>\n                <NavLink to=\"/diary\" className={({ isActive }) => \"\" + (isActive ? \" is-selected \" : \"\")}>다이어리</NavLink>\n                <NavLink to=\"/calendar\" className={({ isActive }) => \"\" + (isActive ? \" is-selected \" : \"\")}>캘린더</NavLink>\n                <NavLink to=\"/gallary\" className={({ isActive }) => \"\" + (isActive ? \" is-selected \" : \"\")}>갤러리</NavLink>\n            </div>\n        </div>\n        \n        <RoutesPage></RoutesPage>\n    </BrowserRouter>\n    </>\n\n  );\n}\nexport default Header;","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/routes/RoutesPage.js",["89"],[],"import React, { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Todolist from \"../todolist/Todolist\";\nimport Diary from \"../diary/Diary\";\nimport CalendarPage from \"../calendar/CalendarPage\";\nimport Gallary from \"../gallary/Gallary\";\nimport Main from \"../main/Main\";\nimport Register from \"../login/Register\";\nimport Login from \"../login/Login\";\nimport ChangePw from \"../login/ChangePw\";\n\nfunction Header() {\n\n  return (\n    <Routes>\n        <Route path=\"/\" element={<Main/>}></Route>\n        <Route path=\"/todolist\" element={<Todolist/>}></Route>\n        <Route path=\"/diary\" element={<Diary/>}></Route>\n        <Route path=\"/calendar\" element={<CalendarPage/>}></Route>\n        <Route path=\"/gallary\" element={<Gallary/>}></Route>\n        <Route path=\"/login\" element={<Login/>}></Route>\n        <Route path=\"/register\" element={<Register/>}></Route>\n        <Route path=\"/changepw\" element={<ChangePw/>}></Route>\n    </Routes>\n\n  );\n}\nexport default Header;","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/gallary/Gallary.js",["90","91","92","93"],[],"/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/diary/Diary.js",["94","95","96","97","98"],[],"\nimport React, { useState } from \"react\";\nfunction Diary() {\n    return (\n        <>\n        {/* diary */}\n        <div className=\"page-diary\">\n            <div className=\"data-day\">2023.11.10(금) <a href=\"javascript:\" className=\"btn-calen\">달력아이콘</a></div>\n            <div class=\"page-title\">\n                내가 쓴 일기\n            </div>\n            <div className=\"wrap-box\">\n                {/* Box */}\n                <div className=\"box-diary\">\n                    <div className=\"box-title\">\n                        <span className=\"data-category\">[카테고리명] </span>\n                        \n                        <span className=\"data-name\">\n                        일기 제목일기 제목일기 제목일기 제목일기 제목일기 제목일기 제목\n                        </span>\n                    </div>\n                    <div className=\"data-image\">\n                        내 일기 1\n                        커버 이미지\n                    </div>\n                    \n                </div>\n                    {/* Box */}\n                    <div className=\"box-diary\">\n                    <div className=\"box-title\">\n                        <span className=\"data-category\">[카테고리명] </span>\n                        \n                        <span className=\"data-name\">\n                            일기 제목일기 \n                        </span>\n                    </div>\n                    <div className=\"data-image\">\n                        내 일기 1\n                        커버 이미지\n                    </div>\n                    \n                </div>\n            </div>\n\n            <div className=\"fix-buttons\">\n\n                <a href=\"javascript:\" className=\"form-button\">새 일기 쓰기</a>\n            </div>\n        </div>\n      </>\n    )\n}\n\nexport default Diary;\n","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/calendar/CalendarPage.js",["99","100","101","102","103","104","105"],[],"\nimport React, { useState } from \"react\";\nimport CalendarForm from \"./CalendarForm\";\n\nfunction CalendarPage() {\n    return (\n        <>\n            {/* calendar */}\n            <div className=\"page-calendar\">\n                <div class=\"page-title\">\n                    캘린더\n                </div>\n                <CalendarForm></CalendarForm>\n\n                <div className=\"ui-list\">\n                    <div className=\"txt-label\">Todo 리스트</div>\n                    <ul className=\"list-form\">\n                        <li>\n                            <a href=\"javascript:\">\n                                <div className=\"data-list\">Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록\n                                </div>\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"javascript:\">\n                                <div className=\"data-list\">Todo 리스트 목록\n                                </div>\n                            </a>\n                        </li>\n                    </ul>\n                    <div className=\"txt-label\">다이어리 리스트</div>\n                    <ul className=\"list-form\">\n                        <li>\n                            <a href=\"javascript:\">\n                                <div className=\"data-list\">다이어리 리스트 목록\n                            </div>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n         \n      </>\n    )\n}\n\nexport default CalendarPage;\n","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/login/Register.js",["106"],[],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Register() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isUsernameAvailable, setIsUsernameAvailable] = useState(true);\n  const [isRegisterButtonDisabled, setIsRegisterButtonDisabled] = useState(true);\n\n  let newWindow;\n\n  const checkUsernameAvailability = () => {\n    if (username === '') {\n      setIsUsernameAvailable(false);\n      setMessage('아이디를 입력하세요.');\n      setIsRegisterButtonDisabled(true);\n    } else if (username === 'user1') {\n      setIsUsernameAvailable(false);\n      setMessage('이미 사용 중인 아이디입니다. 다른 아이디를 입력해보세요.');\n      setUsername(''); // 이미 사용 중인 아이디인 경우 아이디 입력칸을 비움\n      setIsRegisterButtonDisabled(true);\n    } else {\n      setIsUsernameAvailable(true);\n      setMessage('사용 가능한 아이디입니다.');\n      if (password !== '' && confirmPassword !== '') {\n        setIsRegisterButtonDisabled(false);\n      } else {\n        setIsRegisterButtonDisabled(true);\n      }\n      openCheckNameWindow();\n    }\n  };\n\n  \n  //아이디중복확인 새 창\n  const openCheckNameWindow = () => {\n    newWindow = window.open('', '_blank', 'width=400, height=400');\n    newWindow.document.write('<h2>아이디 중복 확인</h2>');\n    newWindow.document.write(`<p>입력한 아이디: ${username}</p>`);\n    if (isUsernameAvailable) {\n      newWindow.document.write('<p>사용 가능한 아이디입니다.</p>');\n    } else {\n      newWindow.document.write('<p>이미 사용 중인 아이디입니다. 다른 아이디를 입력해주세요.</p>');\n    }\n  };\n\n  // 비밀번호 일치여부 체크\n  const handlePasswordChange = (newPassword) => {\n  setPassword(newPassword);\n  if (newPassword === confirmPassword) {\n    setMessage('비밀번호가 일치합니다.');\n    if (username !== '' && confirmPassword !== '' && newPassword !== '') {\n      setIsRegisterButtonDisabled(false);\n    }\n  } else {\n    setMessage('비밀번호가 일치하지 않습니다.');\n    setIsRegisterButtonDisabled(true);\n  }\n};\n\nconst handleConfirmPasswordChange = (newConfirmPassword) => {\n  setConfirmPassword(newConfirmPassword);\n  if (newConfirmPassword === password) {\n    setMessage('비밀번호가 일치합니다.');\n    if (username !== '' && password !== '' && newConfirmPassword !== '') {\n      setIsRegisterButtonDisabled(false);\n    }\n  } else {\n    setMessage('비밀번호가 일치하지 않습니다.');\n    setIsRegisterButtonDisabled(true);\n  }\n};\n\n\n\n  //비밀번호 일치하고 \n  const handleRegister = () => {\n    if (password !== confirmPassword) {\n      setMessage('비밀번호와 비밀번호 확인이 일치하지 않습니다.');\n    } else {\n      setMessage(''); // 메시지 지우기\n      alert('회원가입이 완료되었습니다. 로그인 페이지로 이동합니다.');\n      window.location.href = \"/login\";\n    }\n  };\n\n  return (\n  \n    <div className=\"page-login\">\n      <div className=\"form-login\">\n      <div className=\"ui-logo\">\n          <a class=\"txt-logo\" href=\"/\">D.I.A.R.Y</a>\n        </div>\n      \n        <h2 className=\"txt-label\">회원가입</h2>\n        <div className=\"form-div\">\n          <div className=\"form-label\">\n            아이디 \n          </div>\n          <div className=\"form-multi\">\n            <input type=\"text\" placeholder=\"아이디\" value={username} \n              onChange={(e) => setUsername(e.target.value)} className=\"form-input\"/>\n            \n            <button onClick={checkUsernameAvailability} className=\"form-button type-s-dark\">중복확인</button>\n          </div>\n\n        </div>\n        <div className=\"form-div\">\n          <div className=\"form-label\">\n          비밀번호 입력 {' '}\n          </div>\n          <input type=\"password\" placeholder=\"비밀번호\" value={password} \n            onChange={(e) => handlePasswordChange(e.target.value)} className=\"form-input\"/>\n        </div>\n\n        <div className=\"form-div\">\n          \n          <div className=\"form-label\">\n          비밀번호 입력 확인 :{' '}\n          </div>\n          <input type=\"password\" placeholder=\"비밀번호 확인\" value={confirmPassword} \n          onChange={(e) => handleConfirmPasswordChange(e.target.value)}className=\"form-input\"/>\n        </div>\n  \n\n          <button onClick={handleRegister} disabled={isRegisterButtonDisabled} className=\"form-button\">\n            회원가입\n          </button>\n          {message && <p>{message}</p>}\n        </div>\n      </div>\n  );\n}\n","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/main/Main.js",["107","108","109","110","111","112","113","114","115","116","117","118","119"],[],"/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/todolist/Todolist.js",["120"],[],"import React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Todolist = () => {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [searchTodo, setSearchTodo] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const contentRef = useRef();\n  const [checkedTodos, setCheckedTodos] = useState([]);\n  \n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtaWQiOjEsImlhdCI6MTcwMDExMDg4Mn0.tMskdD90yKKLEjJp94kRr-Bjg88Fol6Z-ZSMMotOZaA';\n\n    if (token) {\n      axios\n        .get(\n          \"/todos\",\n          { validateStatus: false },\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        )\n        .then((res) => {setTodos(res.data.data); \n                      console.log(res.data.data)})\n        .catch((error) => setError(error.message));\n    }\n  });\n\n  const addTodo = async (e) => {\n    e.preventDefault();\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      \n      setNewTodo(contentRef.current.value);\n      console.log(newTodo);\n\n      const response = await axios.post(\n        \"http://localhost:8080/todos\",\n        { todo_content: newTodo, completed: false , members_no:1},\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      console.log(\"서버 응답:\", response.data);\n\n      if (response.data && response.data.success) {\n        setTodos([...todos, response.data.data]);\n      } else {\n        console.error(\"Invalid response format:\", response.data);\n      }\n      setNewTodo(\"\");\n    } catch (error) {\n      console.error(\"에러:\", error);\n    }\n  };\n\n  // const deleteTodo = (id) => {\n  //   const token = localStorage.getItem(\"token\");\n  //   axios\n  //     .delete(`http://localhost:3000/todos/${id}`, {\n  //       headers: { Authorization: token },\n  //     })\n  //     .then(() => setTodos(todos.filter((todo) => todo.id !== id)))\n  //     .catch((error) => console.error(\"Error deleting todo:\", error));\n  // };\n\n\n  //체크박스 상태 변경 핸들러\n  const handleCheckboxChange = (members_no) => {\n    setCheckedTodos((prevChecked) => {\n      if (prevChecked.includes(members_no)) {\n        return prevChecked.filter((id) => id !== members_no);\n      } else {\n        return [...prevChecked, members_no];\n      }\n    });\n  };\n\n\n\n\n  const deleteTodo = () => {\n    const token = localStorage.getItem(\"token\");\n    // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtaWQiOjEsImlhdCI6MTcwMDExMDg4Mn0.tMskdD90yKKLEjJp94kRr-Bjg88Fol6Z-ZSMMotOZaA';\n    if (checkedTodos.length === 0) {\n      alert(\"선택된 항목이 없습니다.\");\n      return;\n    }\n    checkedTodos.forEach(async (checkedMemberNo) => {\n      try {\n        await axios.delete(`http://localhost:3000/todos/${checkedMemberNo}`, {\n          headers: { Authorization: token },\n        });\n        setTodos((prevTodos) =>\n          prevTodos.filter((todos) => todos.members_no !== checkedMemberNo)\n        );\n      } catch (error) {\n        console.error(\"투두 삭제 오류:\", error);\n      }\n    });\n\n    setCheckedTodos([]);\n  };\n\n  const filteredTodos = searchTodo\n    ? todos.filter((todos) =>\n        todos.todo_content.toLowerCase().includes(searchTodo.toLowerCase())\n      )\n    : todos;\n\n  return (\n    <div>\n      {/* TodoList */}\n      <div className=\"page-todolist\">\n        <div className=\"page-title\">\n          Todo 리스트\n          {/* <a href=\"javascript:\" className=\"btn-calen\">달력아이콘</a> */}\n          <img\n            src=\"calendar-icon.png\"\n            alt=\"Calendar Icon\"\n            className=\"btn-calen\"\n          />\n        </div>\n        <div className=\"page-contents\">\n          <div className=\"data-day\">2023.11.09(목)</div>\n\n          {/* Form */}\n          <form className=\"form-type\" onSubmit={addTodo}>\n            <input\n              ref={contentRef}\n              type=\"text\"\n              id=\"newTodo\"\n              name=\"todo_content\"\n              placeholder=\"Todo 리스트를 추가해주세요 \"\n              className=\"form-input\"\n              value={newTodo}\n              onChange={(e) => setNewTodo(e.target.value)}\n            />\n            <button className=\"form-button\">추가</button>\n          </form>\n\n          {/* Form */}\n          <div className=\"form-type\">\n            <input\n              type=\"text\"\n              id=\"searchTodo\"\n              name=\"todo_content\"\n              placeholder=\"Todo 리스트를 검색해주세요. \"\n              className=\"form-input\"\n              value={searchTodo}\n              onChange={(e) => setSearchTodo(e.target.value)}\n            />\n            <button\n              className=\"form-button\"\n              onClick={() => setSearchTodo(searchTodo)}\n            >\n              검색\n            </button>\n          </div>\n\n          {/* List */}\n          <div className=\"wrap-list\">\n            {/* Data 가 없을 경우 */}\n            {filteredTodos.length === 0 && newTodo.trim() === \"\" ? (\n              <div className=\"data-nodata\">\n                Todo 리스트가 없습니다.\n                <br />\n                Todo 리스트를 추가해주세요.\n              </div>\n            ) : (\n              <ul className=\"form-list\">\n                {filteredTodos.map((todo) => (\n                  <li key={todo.id}>\n                    \n                    <input type=\"checkbox\" \n                      checked={checkedTodos.includes(todo.todo_content)} \n                      onChange={() => handleCheckboxChange(todo.todo_content)}\n                    />\n                  {todo.todo_content}\n                    {/* <div className=\"data-list\">{todo.members_no}</div> */}\n                    <button\n                      className=\"form-button type-s-dark\"\n                      onClick={() => deleteTodo()}\n                    >\n                      삭제\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Todolist;","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/login/Login.js",["121","122"],[],"//로그인페이지\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useCookies } from 'react-cookie';\n\nexport default function Login({ setIsLoggedIn }) {\n  const [member_name, setMembername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const navigate = useNavigate();\n  const [cookies, setCookie, removeCookie] = useCookies(['jwtToken']);\n\n  const handleLogin = async () => {\n    try {\n      if (!member_name || !password) {\n        setErrorMessage('아이디와 비밀번호를 모두 입력하세요.');\n        setTimeout(() => {\n          // 입력 상자의 값 초기화\n          setErrorMessage('');\n          setMembername('');\n          setPassword('');\n        }, 1000);// 1초 후 메시지 사라짐\n        return;\n      }\n\n      const response = await axios.post('/sign-in', {\n        member_name,\n        password,\n      });\n\n      if (response.data.token) {\n        // JWT 토큰을 쿠키에 저장 (1일 만료)\n        setCookie('jwtToken', response.data.token, { path: '/', maxAge: 86400 });\n\n        setIsLoggedIn(true);\n        window.alert('로그인되었습니다. 홈으로 이동합니다');\n\n        setTimeout(() => {\n          navigate('/home');\n        }, 500);// 홈으로 0.5초 후 이동\n      } else {\n        setErrorMessage('아이디 또는 비밀번호가 일치하지 않습니다.');\n        setMembername('');\n        setPassword('');\n      }\n    } catch (error) {\n      console.error('로그인 오류:', error);\n      window.alert('로그인 중 오류가 발생했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // // 로그아웃 시 JWT 토큰 삭제\n  // const handleLogout = () => {\n  // // 로컬 스토리지에서 JWT 토큰 삭제\n  //   localStorage.removeItem('token');\n\n  //   setIsLoggedIn(false);\n  //   window.alert('로그아웃하였습니다.');\n  //   navigate('http://localhost:3000/login');\n  // }\n\n  const openChangePwWindow = () => {\n    window.open('http://localhost:3000/changepw', '_blank', 'width=400, height=400');\n  };\n\n  return (\n    <div>\n      <Link to=\"/home\"><h1>로고</h1></Link>\n      <br/><br/>\n      <h2>로그인</h2>\n\n      <input\n        type=\"text\"\n        placeholder=\"아이디\"\n        value={member_name}\n        onChange={(e) => setMembername(e.target.value)}\n      />\n      <br />\n\n      <input\n        type=\"password\"\n        placeholder=\"비밀번호\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <br />\n\n      <button onClick={handleLogin}>로그인</button>\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n      <p>\n        <Link to=\"/register\">회원가입 | </Link> {' '}\n        <button onClick={openChangePwWindow}>비밀번호 변경</button>\n      </p>\n    </div>\n  );\n}\n","/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/login/ChangePw.js",[],[],"/Users/heppy-family/Desktop/diary/DIARY-fe/src/page/calendar/CalendarForm.js",[],[],{"ruleId":"123","severity":1,"message":"124","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":23},{"ruleId":"123","severity":1,"message":"127","line":3,"column":25,"nodeType":"125","messageId":"126","endLine":3,"endColumn":31},{"ruleId":"123","severity":1,"message":"128","line":3,"column":33,"nodeType":"125","messageId":"126","endLine":3,"endColumn":38},{"ruleId":"123","severity":1,"message":"129","line":3,"column":40,"nodeType":"125","messageId":"126","endLine":3,"endColumn":44},{"ruleId":"123","severity":1,"message":"130","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"131","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"123","severity":1,"message":"127","line":2,"column":25,"nodeType":"125","messageId":"126","endLine":2,"endColumn":31},{"ruleId":"123","severity":1,"message":"128","line":2,"column":33,"nodeType":"125","messageId":"126","endLine":2,"endColumn":38},{"ruleId":"123","severity":1,"message":"132","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":16},{"ruleId":"123","severity":1,"message":"130","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"130","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":25},{"ruleId":"123","severity":1,"message":"133","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":15,"column":21,"nodeType":"136","endLine":15,"endColumn":67},{"ruleId":"137","severity":1,"message":"138","line":15,"column":29,"nodeType":"139","messageId":"140","endLine":15,"endColumn":42},{"ruleId":"123","severity":1,"message":"130","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":8,"column":53,"nodeType":"136","endLine":8,"endColumn":97},{"ruleId":"137","severity":1,"message":"138","line":8,"column":61,"nodeType":"139","messageId":"140","endLine":8,"endColumn":74},{"ruleId":"134","severity":1,"message":"135","line":47,"column":17,"nodeType":"136","endLine":47,"endColumn":63},{"ruleId":"137","severity":1,"message":"138","line":47,"column":25,"nodeType":"139","messageId":"140","endLine":47,"endColumn":38},{"ruleId":"123","severity":1,"message":"130","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":19,"column":29,"nodeType":"136","endLine":19,"endColumn":51},{"ruleId":"137","severity":1,"message":"138","line":19,"column":37,"nodeType":"139","messageId":"140","endLine":19,"endColumn":50},{"ruleId":"134","severity":1,"message":"135","line":25,"column":29,"nodeType":"136","endLine":25,"endColumn":51},{"ruleId":"137","severity":1,"message":"138","line":25,"column":37,"nodeType":"139","messageId":"140","endLine":25,"endColumn":50},{"ruleId":"134","severity":1,"message":"135","line":34,"column":29,"nodeType":"136","endLine":34,"endColumn":51},{"ruleId":"137","severity":1,"message":"138","line":34,"column":37,"nodeType":"139","messageId":"140","endLine":34,"endColumn":50},{"ruleId":"123","severity":1,"message":"129","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":23},{"ruleId":"123","severity":1,"message":"127","line":2,"column":25,"nodeType":"125","messageId":"126","endLine":2,"endColumn":31},{"ruleId":"123","severity":1,"message":"128","line":2,"column":33,"nodeType":"125","messageId":"126","endLine":2,"endColumn":38},{"ruleId":"123","severity":1,"message":"130","line":3,"column":17,"nodeType":"125","messageId":"126","endLine":3,"endColumn":25},{"ruleId":"123","severity":1,"message":"129","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":16,"column":17,"nodeType":"136","endLine":16,"endColumn":59},{"ruleId":"137","severity":1,"message":"138","line":16,"column":25,"nodeType":"139","messageId":"140","endLine":16,"endColumn":38},{"ruleId":"134","severity":1,"message":"135","line":27,"column":17,"nodeType":"136","endLine":27,"endColumn":59},{"ruleId":"137","severity":1,"message":"138","line":27,"column":25,"nodeType":"139","messageId":"140","endLine":27,"endColumn":38},{"ruleId":"134","severity":1,"message":"135","line":38,"column":17,"nodeType":"136","endLine":38,"endColumn":59},{"ruleId":"137","severity":1,"message":"138","line":38,"column":25,"nodeType":"139","messageId":"140","endLine":38,"endColumn":38},{"ruleId":"134","severity":1,"message":"135","line":48,"column":17,"nodeType":"136","endLine":48,"endColumn":59},{"ruleId":"137","severity":1,"message":"138","line":48,"column":25,"nodeType":"139","messageId":"140","endLine":48,"endColumn":38},{"ruleId":"123","severity":1,"message":"141","line":8,"column":10,"nodeType":"125","messageId":"126","endLine":8,"endColumn":15},{"ruleId":"123","severity":1,"message":"142","line":15,"column":10,"nodeType":"125","messageId":"126","endLine":15,"endColumn":17},{"ruleId":"123","severity":1,"message":"143","line":15,"column":30,"nodeType":"125","messageId":"126","endLine":15,"endColumn":42},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Calendar' is defined but never used.","'Select' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'error' is assigned a value but never used.","'cookies' is assigned a value but never used.","'removeCookie' is assigned a value but never used."]