[{"D:\\DIARY-fe\\DIARY-fe\\src\\index.js":"1","D:\\DIARY-fe\\DIARY-fe\\src\\App.js":"2","D:\\DIARY-fe\\DIARY-fe\\src\\reportWebVitals.js":"3","D:\\DIARY-fe\\DIARY-fe\\src\\page\\layout\\Header.js":"4","D:\\DIARY-fe\\DIARY-fe\\src\\page\\routes\\RoutesPage.js":"5","D:\\DIARY-fe\\DIARY-fe\\src\\page\\gallary\\Gallary.js":"6","D:\\DIARY-fe\\DIARY-fe\\src\\page\\main\\Main.js":"7","D:\\DIARY-fe\\DIARY-fe\\src\\page\\diary\\DiaryEdit.js":"8","D:\\DIARY-fe\\DIARY-fe\\src\\page\\calendar\\CalendarPage.js":"9","D:\\DIARY-fe\\DIARY-fe\\src\\page\\diary\\DiaryDetail.js":"10","D:\\DIARY-fe\\DIARY-fe\\src\\page\\login\\Register.js":"11","D:\\DIARY-fe\\DIARY-fe\\src\\page\\diary\\Diary.js":"12","D:\\DIARY-fe\\DIARY-fe\\src\\page\\login\\Login.js":"13","D:\\DIARY-fe\\DIARY-fe\\src\\page\\todolist\\Todolist.js":"14","D:\\DIARY-fe\\DIARY-fe\\src\\page\\login\\ChangePw.js":"15","D:\\DIARY-fe\\DIARY-fe\\src\\page\\calendar\\CalendarForm.js":"16","D:\\DIARY-fe\\DIARY-fe\\src\\page\\editor\\EditorForm.js":"17","D:\\DIARY-fe\\DIARY-fe\\src\\page\\diary\\DiaryEdit2.js":"18"},{"size":535,"mtime":1699246229000,"results":"19","hashOfConfig":"20"},{"size":262,"mtime":1700344582885,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1699246229000,"results":"22","hashOfConfig":"20"},{"size":1417,"mtime":1700476499186,"results":"23","hashOfConfig":"20"},{"size":1331,"mtime":1700476563919,"results":"24","hashOfConfig":"20"},{"size":3351,"mtime":1700476486971,"results":"25","hashOfConfig":"20"},{"size":2384,"mtime":1700408640331,"results":"26","hashOfConfig":"20"},{"size":1318,"mtime":1700479479869,"results":"27","hashOfConfig":"20"},{"size":1923,"mtime":1700476345597,"results":"28","hashOfConfig":"20"},{"size":2355,"mtime":1700479468754,"results":"29","hashOfConfig":"20"},{"size":4873,"mtime":1700448058129,"results":"30","hashOfConfig":"20"},{"size":2001,"mtime":1700465616551,"results":"31","hashOfConfig":"20"},{"size":4953,"mtime":1700415203303,"results":"32","hashOfConfig":"20"},{"size":10362,"mtime":1700468519417,"results":"33","hashOfConfig":"20"},{"size":3713,"mtime":1700417078484,"results":"34","hashOfConfig":"20"},{"size":1529,"mtime":1700476315192,"results":"35","hashOfConfig":"20"},{"size":334,"mtime":1700476463162,"results":"36","hashOfConfig":"20"},{"size":2508,"mtime":1700479653242,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"rm1dn3",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"41"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"41"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\DIARY-fe\\DIARY-fe\\src\\index.js",[],[],["101","102","103","104","105","106"],"D:\\DIARY-fe\\DIARY-fe\\src\\App.js",[],[],"D:\\DIARY-fe\\DIARY-fe\\src\\reportWebVitals.js",[],[],"D:\\DIARY-fe\\DIARY-fe\\src\\page\\layout\\Header.js",[],[],"D:\\DIARY-fe\\DIARY-fe\\src\\page\\routes\\RoutesPage.js",["107"],[],"import React, { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Todolist from \"../todolist/Todolist\";\nimport Diary from \"../diary/Diary\";\nimport CalendarPage from \"../calendar/CalendarPage\";\nimport Gallary from \"../gallary/Gallary\";\nimport Main from \"../main/Main\";\nimport Register from \"../login/Register\";\nimport Login from \"../login/Login\";\nimport ChangePw from \"../login/ChangePw\";\nimport DiaryDetail from \"../diary/DiaryDetail\";\nimport DiaryEdit from \"../diary/DiaryEdit\";\nimport DiaryEdit2 from \"../diary/DiaryEdit2\";\n\nfunction Header() {\n\n  return (\n    <Routes>\n        <Route path=\"/\" element={<Main/>}></Route>\n        <Route path=\"/todolist\" element={<Todolist/>}></Route>\n        <Route path=\"/diary\" element={<Diary/>}></Route>\n        <Route path=\"/calendar\" element={<CalendarPage/>}></Route>\n        <Route path=\"/gallary\" element={<Gallary/>}></Route>\n        <Route path=\"/login\" element={<Login/>}></Route>\n        <Route path=\"/register\" element={<Register/>}></Route>\n        <Route path=\"/changepw\" element={<ChangePw/>}></Route>\n        <Route path=\"/diarydetail\" element={<DiaryDetail/>}></Route>\n        <Route path=\"/mydiaries\" element={<DiaryEdit/>}></Route>\n        <Route path=\"/mydiaries2\" element={<DiaryEdit2/>}></Route>\n    </Routes>\n\n  );\n}\nexport default Header;","D:\\DIARY-fe\\DIARY-fe\\src\\page\\gallary\\Gallary.js",["108","109","110","111"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Calendar from '../calendar/CalendarForm';\r\nimport { Select } from '@mantine/core';\r\n\r\n\r\nconst Gallery = () => {\r\n  const [images, setImages] = useState([]); // 이미지 목록\r\n  const [selectedDate, setSelectedDate] = useState(new Date()); // 선택된 날짜\r\n  const [orderBy, setOrderBy] = useState('latest'); // 정렬 순서\r\n\r\n  // 페이지 로딩 시 이미지 불러오기\r\n  useEffect(() => {\r\n    \r\n    const token = localStorage.getItem('token'); // 저장된 JWT 토큰 가져오기\r\n\r\n    if (token) {// 선택된 달의 시작일과 종료일 계산\r\n      const startDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1);\r\n      const endDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0);\r\n\r\n      // API 서버로 요청을 보낼 때 토큰을 헤더에 추가\r\n      axios.get('https://diary-be.azurewebsites.net/gallery/1', {\r\n        params: {\r\n          userId: 'member_id', \r\n          startDate: startDate.toISOString(),\r\n          endDate: endDate.toISOString(),\r\n          orderBy: orderBy,\r\n        },\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`, \r\n        },\r\n      })\r\n      .then(response => {\r\n        setImages(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('이미지 불러오기 오류:', error);\r\n      });\r\n    }\r\n  }, [selectedDate, orderBy]);\r\n\r\n  // 정렬 순서 변경 시 호출되는 함수\r\n  const handleOrderByChange = (event) => {\r\n    setOrderBy(event.target.value);\r\n  };\r\n\r\n  // 달력에서 날짜 변경 시 호출되는 함수\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <>\r\n        {/* 달력 부분 */}\r\n        <div className=\"page-gallary\">\r\n            <div class=\"page-title\">\r\n                갤러리\r\n            </div>\r\n            <div className=\"ui-top\">\r\n                <Calendar onChange={handleDateChange} value={selectedDate}/>\r\n                <a href=\"javascript:\" className=\"form-button\">불러오기</a>\r\n\r\n                {/* 정렬 순서 선택을 위한 셀렉트 박스 */}\r\n                <label htmlFor=\"orderBy\">정렬 순서:</label>\r\n                <select id=\"orderBy\" value={orderBy} onChange={handleOrderByChange}>\r\n                    <option value=\"latest\">최신순</option>\r\n                    <option value=\"oldest\">오래된순</option>\r\n                </select>\r\n\r\n                {/* 이미지를 나타내는 부분 */}\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n                    \r\n                    {/* 각 이미지에 대한 Link*/}\r\n                    {images.map((image, id) => (\r\n                    <Link key={id} to={`/mydiaries/${image.date}`}>\r\n                        <img \r\n                        src={`https://diary-be.azurewebsites.net/${image.containerName}/${image.imageName}`} \r\n                        alt={`Image ${id}`}\r\n                        style={{ width: 'calc(33.333% - 16px)', marginBottom: '16px' }}\r\n                        />\r\n                    </Link>\r\n                ))}            \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default Gallery;\r\n","D:\\DIARY-fe\\DIARY-fe\\src\\page\\main\\Main.js",["112","113","114","115","116","117"],[],"\r\nimport { BrowserRouter ,Routes, Route } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import Todolist from \"../TodoList/TodoList\";\r\n\r\n\r\nfunction Main() {\r\n\r\n  //  useEffect(() => {\r\n  //    if (localStorage.getItem('token') === null) {\r\n  //       alert('로그인 후 이용해주세요. 로그인화면으로 이동합니다');\r\n  //      window.location.replace('http://localhost:3000/sign-in')\r\n  //    }\r\n  //   }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"wrap-page\">\r\n\r\n          {/* Container */}\r\n          <div className=\"layout-container\">\r\n            <div className=\"page-main\">\r\n              <div className=\"box-info\">\r\n                <a href=\"/todolist\" className=\"ui-info\">\r\n                  <div className=\"txt-title\">Todo List</div>\r\n                  <i className=\"img-todolist\"></i>\r\n                  <div className=\"txt-det\">\r\n                    오늘 할일을<br />\r\n                    정리해 보세요\r\n                  </div>\r\n                </a>\r\n\r\n              </div>\r\n              <div className=\"box-info\">\r\n                <a href=\"/diary\" className=\"ui-info\">\r\n                  <div className=\"txt-title\">My Diary</div>\r\n                  <i className=\"img-diary\"></i>\r\n                  <div className=\"txt-det\">\r\n                    원하는 템플릿을 가지고 <br />다이어리를 꾸며보세요\r\n                  </div>\r\n                </a>\r\n\r\n\r\n              </div>\r\n              <div className=\"box-info\">\r\n                <a href=\"/calendar\" className=\"ui-info\">\r\n                  <i className=\"img-calendar\"></i>\r\n                  <div className=\"txt-title\">Calendar</div>\r\n\r\n                  <div className=\"txt-det\">\r\n                    한달 동안 Todo List와 <br /> My Diary를 한 눈에\r\n                  </div>\r\n                </a>\r\n              </div>\r\n              <div className=\"box-info\">\r\n                <a href=\"/gallary\" className=\"ui-info\">\r\n                  <div className=\"txt-title\">Gallery</div>\r\n                  <i className=\"img-gallary\"></i>\r\n                  <div className=\"txt-det\">\r\n\r\n                    다이어리 사진을 한눈에..\r\n                  </div>\r\n                </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","D:\\DIARY-fe\\DIARY-fe\\src\\page\\diary\\DiaryEdit.js",["118","119","120","121","122","123"],[],"D:\\DIARY-fe\\DIARY-fe\\src\\page\\calendar\\CalendarPage.js",["124","125","126","127","128","129","130","131"],[],"\r\nimport React, { useState, ReactDOM } from \"react\";\r\nimport CalendarForm from \"./CalendarForm\";\r\n\r\nfunction CalendarPage() {\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* calendar */}\r\n            <div className=\"page-calendar\">\r\n                <div class=\"page-title\">\r\n                    캘린더\r\n                </div>\r\n                <CalendarForm></CalendarForm>\r\n\r\n                <div className=\"ui-list\">\r\n              \r\n                    <div className=\"txt-label\">Todo 리스트</div>\r\n                    <ul className=\"list-form\">\r\n                        <li>\r\n                            <a href=\"javascript:\">\r\n                                <div className=\"data-list\">Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록Todo 리스트 목록\r\n                                </div>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:\">\r\n                                <div className=\"data-list\">Todo 리스트 목록\r\n                                </div>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"txt-label\">다이어리 리스트</div>\r\n                    <ul className=\"list-form\">\r\n                        <li>\r\n                            <a href=\"javascript:\">\r\n                                <div className=\"data-list\">다이어리 리스트 목록\r\n                            </div>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n         \r\n      </>\r\n    )\r\n}\r\n\r\nexport default CalendarPage;","D:\\DIARY-fe\\DIARY-fe\\src\\page\\diary\\DiaryDetail.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],[],"D:\\DIARY-fe\\DIARY-fe\\src\\page\\login\\Register.js",["154","155"],[],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function Register() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isUsernameAvailable, setIsUsernameAvailable] = useState(true);\n  const [isRegisterButtonDisabled, setIsRegisterButtonDisabled] = useState(true);\n\n  //아이디 중복확인\n  const checkUsernameAvailability = async () => {\n    if (username === '') {\n      setIsUsernameAvailable(false);\n      setMessage('아이디를 입력하세요.');\n      setIsRegisterButtonDisabled(true);\n    } else {\n      try {\n        const response = await axios.post('https://diary-be.azurewebsites.net/members/sign-up', {\n          member_id: username,\n        });\n\n        if (response.data.available) {\n          setIsUsernameAvailable(true);\n          setMessage('사용 가능한 아이디입니다.');\n          if (password !== '' && confirmPassword !== '') {\n            setIsRegisterButtonDisabled(false);\n          }\n        } else {\n          setIsUsernameAvailable(false);\n          setMessage('이미 사용 중인 아이디입니다. 다른 아이디를 입력해보세요.');\n          setUsername('');\n          setIsRegisterButtonDisabled(true);\n        }\n      } catch (error) {\n        console.error('아이디 중복 확인 오류:', error);\n        \n      }\n    }\n  };\n\n\n  //비밀번호 일치여부 확인\n  const handlePasswordChange = (newPassword) => {\n    setPassword(newPassword);\n    if (newPassword === confirmPassword) {\n      setMessage('비밀번호가 일치합니다.');\n      if (username !== '' && confirmPassword !== '' && newPassword !== '') {\n        setIsRegisterButtonDisabled(false);\n      }\n    } else {\n      setMessage('비밀번호가 일치하지 않습니다.');\n      setIsRegisterButtonDisabled(true);\n    }\n  };\n\n  const handleConfirmPasswordChange = (newConfirmPassword) => {\n    setConfirmPassword(newConfirmPassword);\n    if (newConfirmPassword === password) {\n      setMessage('비밀번호가 일치합니다.');\n      if (username !== '' && password !== '' && newConfirmPassword !== '') {\n        setIsRegisterButtonDisabled(false);\n      }\n    } else {\n      setMessage('비밀번호가 일치하지 않습니다.');\n      setIsRegisterButtonDisabled(true);\n    }\n  };\n\n  //회원가입\n  const handleRegister = async () => {\n    try {\n      const response = await axios.post('https://diary-be.azurewebsites.net/members/sign-up', {\n        member_id: username,\n        password: password,\n      });\n\n      if (response.data.success) {\n        setMessage('회원가입이 완료되었습니다. 로그인 페이지로 이동합니다.');\n        \n        localStorage.setItem('access_token', response.data.token);\n        window.location.href = '/login';\n      } else {\n        setMessage('회원가입에 실패했습니다. 다시 시도해주세요.');\n      }\n    } catch (error) {\n      console.error('회원가입 오류:', error);\n      \n    }\n  };\n\n  return (\n    <div className=\"page-login\">\n      <div className=\"form-login\">\n        <div className=\"ui-logo\">\n          <a className=\"txt-logo\" href=\"/\">\n            D.I.A.R.Y\n          </a>\n        </div>\n\n        <h2 className=\"txt-label\">회원가입</h2>\n        <div className=\"form-div\">\n          <div className=\"form-label\">아이디 </div>\n          <div className=\"form-multi\">\n            <input\n              type=\"text\"\n              placeholder=\"아이디\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              className=\"form-input\"\n            />\n            <button onClick={checkUsernameAvailability} className=\"form-button type-s-dark\">\n              중복확인\n            </button>\n          </div>\n        </div>\n        <div className=\"form-div\">\n          <div className=\"form-label\">비밀번호 입력 </div>\n          <input\n            type=\"password\"\n            placeholder=\"비밀번호\"\n            value={password}\n            onChange={(e) => handlePasswordChange(e.target.value)}\n            className=\"form-input\"\n          />\n        </div>\n        <div className=\"form-div\">\n          <div className=\"form-label\">비밀번호 입력 확인 :</div>\n          <input\n            type=\"password\"\n            placeholder=\"비밀번호 확인\"\n            value={confirmPassword}\n            onChange={(e) => handleConfirmPasswordChange(e.target.value)}\n            className=\"form-input\"\n          />\n        </div>\n\n        <button onClick={handleRegister} disabled={isRegisterButtonDisabled} className=\"form-button\">\n          회원가입\n        </button>\n        {message && <p>{message}</p>}\n      </div>\n    </div>\n  );\n}\n","D:\\DIARY-fe\\DIARY-fe\\src\\page\\diary\\Diary.js",["156"],[],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\n\nfunction Diary() {\n    return (\n        <>\n        {/* diary */}\n        <div className=\"page-diary\">\n            <div className=\"data-day\">2023.11.10(금) <a href=\"/calendar\" className=\"btn-calen\">달력아이콘</a></div>\n            <div class=\"page-title\">\n                내가 쓴 일기\n            </div>\n            <div className=\"wrap-box\">\n                {/* Box */}\n                <div className=\"box-diary\">\n                    <div className=\"box-title\">\n                        <span className=\"data-category\">[카테고리명] </span>\n                        \n                        <span className=\"data-name\">\n                        일기 제목일기 제목일기 제목일기 제목일기 제목일기 제목일기 제목\n                        </span>\n                    </div>\n                    <div className=\"data-image\">\n                        내 일기 1\n                        커버 이미지\n                    </div>\n                    \n                </div>\n                    {/* Box */}\n                    <div className=\"box-diary\">\n                    <div className=\"box-title\">\n                        <span className=\"data-category\">[카테고리명] </span>\n                        \n                        <span className=\"data-name\">\n                            일기 제목일기 \n                        </span>\n                    </div>\n                    <div className=\"data-image\">\n                        내 일기 1\n                        커버 이미지\n                    </div>\n                    \n                </div>\n            </div>\n\n\n            <div className=\"fix-buttons\">\n                <Link to=\"/mydiaries\" className=\"form-button\">새 일기 쓰기</Link>\n                {/* <a href=\"/mydiaries\" className=\"form-button\">새 일기 쓰기</a> */}\n            </div>\n        </div>\n      </>\n    )\n}\n\nexport default Diary;\n","D:\\DIARY-fe\\DIARY-fe\\src\\page\\login\\Login.js",[],[],"D:\\DIARY-fe\\DIARY-fe\\src\\page\\todolist\\Todolist.js",["157","158"],[],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n//import jwt_decode from 'jwt-decode';\r\n\r\nconst Todolist = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n  const [searchTodo, setSearchTodo] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const contentRef = useRef();\r\n  const [checkedTodos, setCheckedTodos] = useState([]);\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // 저장된 JWT 토큰 가져오기\r\n    //const token = localStorage.getItem(\"token\");\r\n    const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtaWQiOjEsImlhdCI6MTcwMDQ2Nzk2NH0.aq62dcgSt-3mj4YLlsCGw8E7L2kUWn2hQhIiC_XEML0';\r\n\r\n    // 현재 날짜 가져오기 (YYYY-MM-DD 형식)\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    //setCurrentDate(today);\r\n\r\n    // 초기 선택된 날짜 설정\r\n    setSelectedDate(today);\r\n\r\n    if (token) {\r\n      axios\r\n        .get(\r\n          \"https://diary-be.azurewebsites.net/todos\",\r\n          // \"http://localhost:8080/todos\",\r\n          { validateStatus: false },\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setTodos(res.data.data);\r\n          console.log(res.data.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"심각한 에러 발생 : \", error);\r\n          setError(error.message);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const addTodo = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      //const token = localStorage.getItem(\"token\");\r\n      const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtaWQiOjEsImlhdCI6MTcwMDQ2Nzk2NH0.aq62dcgSt-3mj4YLlsCGw8E7L2kUWn2hQhIiC_XEML0';\r\n      setNewTodo(contentRef.current.value);\r\n      console.log(newTodo);\r\n\r\n      if (!newTodo.trim()) {\r\n        alert(\"할일을 작성해주세요.\");\r\n        return;\r\n      }\r\n\r\n      // //현재 로그인된 사용자의 member_no 가져오기\r\n      //   const getCurrentUserMembersNo = () => {\r\n      //   const token = localStorage.getItem(\"token\");\r\n\r\n      //   if(token){\r\n      //     const decodedToken = jwt_decode(token);\r\n      //     return decodedToken.member_no;\r\n      //   }\r\n      //   return null;\r\n      //  }\r\n\r\n      //  const members_no = getCurrentUserMembersNo();\r\n\r\n      const response = await axios.post(\r\n        \"https://diary-be.azurewebsites.net/todos\",\r\n        // \"http://localhost:8080/todos\",\r\n        //{ todo_content: newTodo, members_no:members_no},\r\n        { todo_content: newTodo, members_no:1},\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n          //validateStatus: false,\r\n        }\r\n      );\r\n\r\n      if (response.data && response.data.success) {\r\n        setTodos([...todos, response.data.data]);\r\n        console.log(\"서버 응답 야호!:\", response.data.data);\r\n      } else {\r\n        console.error(\"왜 등록이 안될까 에러: \", response.data.data);\r\n\r\n        // 에러가 SequelizeValidationError인 경우\r\n        if (\r\n          response.data.error &&\r\n          response.data.error.name === \"SequelizeValidationError\"\r\n        ) {\r\n          const validationErrors = response.data.error.errors.map(\r\n            (error) => error.message\r\n          );\r\n          alert(`할일 등록 실패: ${validationErrors.join(\", \")}`);\r\n        } else {\r\n          alert(\"할일 등록에 실패했습니다.\");\r\n        }\r\n      }\r\n\r\n      setNewTodo(\"\");\r\n    } catch (error) {\r\n      console.error(\"에러ㅠㅠ:\", error);\r\n    }\r\n  };\r\n\r\n  //체크박스 상태 변경 핸들러\r\n  const handleCheckboxChange = (todo) => {\r\n    setCheckedTodos((prevChecked) => {\r\n      if (prevChecked.includes(todo.id)) {\r\n        return prevChecked.filter((id) => id !== todo.id);\r\n      } else {\r\n        return [...prevChecked, todo.id];\r\n      }\r\n    });\r\n  };\r\n\r\n  // 선택된 할일 삭제\r\n  const deleteTodo = async () => {\r\n    //const token = localStorage.getItem(\"token\");\r\n    const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtaWQiOjEsImlhdCI6MTcwMDQ2Nzk2NH0.aq62dcgSt-3mj4YLlsCGw8E7L2kUWn2hQhIiC_XEML0';\r\n    if (checkedTodos.length === 0) {\r\n      alert(\"선택된 항목이 없습니다.\");\r\n      return;\r\n    }\r\n    try {\r\n      await Promise.all(\r\n        checkedTodos.map(async (todoId) => {\r\n          await axios.delete(\r\n            `https://diary-be.azurewebsites.net/todos/${todoId}`,\r\n            {\r\n              // await axios.delete(`http://localhost:8080/${todoId}`, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n        })\r\n      );\r\n\r\n      setTodos((prevTodos) =>\r\n        prevTodos.filter((todo) => !checkedTodos.includes(todo.id))\r\n      );\r\n\r\n      setCheckedTodos([]);\r\n    } catch (error) {\r\n      console.error(\"투두 삭제 오류:\", error);\r\n    }\r\n\r\n    //setCheckedTodos([]);\r\n  };\r\n\r\n  // 검색어 변경시 실행되는 함수\r\n  const handleSearch = (e) => {\r\n    setSearchTodo(e.target.value);\r\n  };\r\n\r\n  // 검색된 투두 리스트 필터링\r\n  const filteredTodos = searchTodo\r\n    ? todos.filter((todos) =>\r\n        todos.todo_content.toLowerCase().includes(searchTodo.toLowerCase())\r\n      )\r\n    : todos;\r\n\r\n  //   const handleSearchButton = async () => {\r\n  //   try {\r\n  //     const token = localStorage.getItem(\"token\");\r\n  //     const response = await axios.get(\r\n  //       `https://diary-be.azurewebsites.net/todos?date=${selectedDate}&search=${searchTodo}`,\r\n  //       {\r\n  //         headers: { Authorization: `Bearer ${token}` },\r\n  //       }\r\n  //     );\r\n  //     setTodos(response.data.data);\r\n  //   } catch (error) {\r\n  //     console.error(\"투두 리스트 가져오기 오류:\", error);\r\n  //   }\r\n  // };\r\n\r\n  // 날짜 변경 핸들러\r\n  const handleDateChange = async (action) => {\r\n    const currentDate = new Date(selectedDate);\r\n    let newDate;\r\n\r\n    if (action === \"prev\") {\r\n      newDate = new Date(currentDate);\r\n      newDate.setDate(currentDate.getDate() - 1);\r\n    } else if (action === \"next\") {\r\n      newDate = new Date(currentDate);\r\n      newDate.setDate(currentDate.getDate() + 1);\r\n    } else {\r\n      newDate = action;\r\n    }\r\n\r\n    const formattedDate = newDate.toISOString().split(\"T\")[0];\r\n    setSelectedDate(formattedDate);\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await axios.get(\r\n        `https://diary-be.azurewebsites.net/todos?created_at=${formattedDate}`,\r\n        // `http://localhost:8080/todos?created_at=${formattedDate}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setTodos((prevTodos) => response.data.data);\r\n    } catch (error) {\r\n      console.error(\"투두 리스트 가져오기 오류:\", error);\r\n    }\r\n  };\r\n\r\n  //   ChangeDateTodolist(formattedDate, localStorage.getItem('token'));\r\n\r\n  return (\r\n    <div>\r\n      {/* TodoList */}\r\n      <div className=\"page-todolist\">\r\n        <div className=\"page-title\">\r\n          Todo 리스트\r\n          <a href=\"/calendar\" className=\"btn-calen\">\r\n            <img\r\n              src=\"calendar-icon.png\"\r\n              alt=\"Calendar Icon\"\r\n              className=\"btn-calen\"\r\n            />\r\n          </a>\r\n        </div>\r\n        <div className=\"page-contents\">\r\n          <div className=\"data-day\">\r\n            <button onClick={() => handleDateChange(\"prev\")}>\r\n              <h2>이전</h2>{\" \"}\r\n            </button>\r\n            <span>{currentDate}</span>\r\n            <button onClick={() => handleDateChange(\"next\")}>\r\n              <h2>다음</h2>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Form */}\r\n          <form className=\"form-type\" onSubmit={addTodo}>\r\n            <input\r\n              ref={contentRef}\r\n              type=\"text\"\r\n              id=\"newTodo\"\r\n              name=\"todo_content\"\r\n              placeholder=\"Todo 리스트를 추가해주세요 \"\r\n              className=\"form-input\"\r\n              value={newTodo}\r\n              onChange={(e) => setNewTodo(e.target.value)}\r\n            />\r\n            <button className=\"form-button\">추가</button>\r\n          </form>\r\n\r\n          {/* Form */}\r\n          <div className=\"form-type\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"searchTodo\"\r\n              name=\"todo_content\"\r\n              placeholder=\"Todo 리스트를 검색해주세요. \"\r\n              className=\"form-input\"\r\n              value={searchTodo}\r\n              onChange={handleSearch}\r\n              //onChange={(e) => setSearchTodo(e.target.value)}\r\n            />\r\n            <button\r\n              className=\"form-button\"\r\n              onClick={() => setSearchTodo(searchTodo)}\r\n              //onClick={handleSearchButton}\r\n            >\r\n              검색\r\n            </button>\r\n          </div>\r\n\r\n          {/* List */}\r\n          <div className=\"wrap-list\">\r\n            {/* Data 가 없을 경우 */}\r\n            {filteredTodos &&\r\n            filteredTodos.length === 0 &&\r\n            newTodo.trim() === \"\" ? (\r\n              <div className=\"data-nodata\">\r\n                Todo 리스트가 없습니다.\r\n                <br />\r\n                Todo 리스트를 추가해주세요.\r\n              </div>\r\n            ) : (\r\n              <ul className=\"form-list\">\r\n                {/* {filteredTodos.map((todo) => (*/}\r\n                {filteredTodos &&\r\n                  filteredTodos.map((todo) => (\r\n                    <li key={todo.id}>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={checkedTodos.includes(todo.id)}\r\n                        onChange={() => handleCheckboxChange(todo)}\r\n                      />\r\n                      {todo.todo_content}\r\n                      <div className=\"data-list\">{todo.members_no}</div>\r\n                      <button\r\n                        className=\"form-button type-s-dark\"\r\n                        onClick={() => deleteTodo()}\r\n                      >\r\n                        삭제\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todolist;\r\n","D:\\DIARY-fe\\DIARY-fe\\src\\page\\login\\ChangePw.js",[],[],"D:\\DIARY-fe\\DIARY-fe\\src\\page\\calendar\\CalendarForm.js",["159","160"],[],"\r\nimport { useState, useEffect } from 'react';\r\nimport { useQuery } from \"react-query\";\r\nimport axios from 'axios';\r\nimport moment from \"moment\"\r\nimport month from 'month';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nfunction CalendarForm() {\r\n\r\n\r\n  const [toDos,setTodos] = useState([]);\r\n  useEffect(()=> {\r\n      getTodos();\r\n    },[])\r\n    // 서버로 실제 데이터 전송 \r\n    // const token = localStorage.getItem('jwt_token');\r\n  const getTodos = () => {\r\n      axios.get(\r\n        'http://localhost:8080/todos',\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtaWQiOjEsImlhdCI6MTcwMDM3MDUzMX0.2NNWyqziEVRSjh3Ob-hYDvDHHHMZvMGJybOA7bg6SZw`,\r\n          },\r\n        })\r\n      .then(res => {\r\n        setTodos(res.data)\r\n\r\n      }).catch(error => {\r\n          console.log(error)\r\n      })\r\n  }; \r\n\r\n  console.log('toDos',toDos);\r\n\r\n  const aa = toDos.data && toDos.data.map((data)=>{\r\n    const tempdate = moment(data).format('DD-MM-YYYY')\r\n    return tempdate\r\n  }); \r\n  return (\r\n \r\n    <div>\r\n        <Calendar\r\n \r\n          tileClassName={({ date, view }) => {\r\n            \r\n            if(aa?.find(x=>x===moment(date).format(\"DD-MM-YYYY\"))){\r\n              return  'highlight'\r\n              }\r\n          \r\n          }}\r\n          tileDisabled={({ date }) => date.getDay() === 0}\r\n\r\n          minDate={\r\n            new Date()\r\n          }\r\n        />\r\n\r\n    </div>\r\n   \r\n  );\r\n}\r\nexport default CalendarForm;","D:\\DIARY-fe\\DIARY-fe\\src\\page\\editor\\EditorForm.js",[],[],"D:\\DIARY-fe\\DIARY-fe\\src\\page\\diary\\DiaryEdit2.js",[],[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"177","line":5,"column":10,"nodeType":"175","messageId":"176","endLine":5,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":62,"column":17,"nodeType":"180","endLine":62,"endColumn":63},{"ruleId":"181","severity":1,"message":"182","line":62,"column":25,"nodeType":"183","messageId":"184","endLine":62,"endColumn":38},{"ruleId":"185","severity":1,"message":"186","line":77,"column":25,"nodeType":"180","endLine":81,"endColumn":27},{"ruleId":"173","severity":1,"message":"187","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":23},{"ruleId":"173","severity":1,"message":"188","line":2,"column":25,"nodeType":"175","messageId":"176","endLine":2,"endColumn":31},{"ruleId":"173","severity":1,"message":"189","line":2,"column":33,"nodeType":"175","messageId":"176","endLine":2,"endColumn":38},{"ruleId":"173","severity":1,"message":"174","line":3,"column":17,"nodeType":"175","messageId":"176","endLine":3,"endColumn":25},{"ruleId":"173","severity":1,"message":"190","line":3,"column":27,"nodeType":"175","messageId":"176","endLine":3,"endColumn":36},{"ruleId":"173","severity":1,"message":"191","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":24,"column":61,"nodeType":"180","endLine":24,"endColumn":105},{"ruleId":"181","severity":1,"message":"182","line":24,"column":69,"nodeType":"183","messageId":"184","endLine":24,"endColumn":82},{"ruleId":"178","severity":1,"message":"179","line":31,"column":21,"nodeType":"180","endLine":31,"endColumn":67},{"ruleId":"181","severity":1,"message":"182","line":31,"column":29,"nodeType":"183","messageId":"184","endLine":31,"endColumn":42},{"ruleId":"178","severity":1,"message":"179","line":32,"column":21,"nodeType":"180","endLine":32,"endColumn":77},{"ruleId":"181","severity":1,"message":"182","line":32,"column":29,"nodeType":"183","messageId":"184","endLine":32,"endColumn":42},{"ruleId":"173","severity":1,"message":"174","line":2,"column":17,"nodeType":"175","messageId":"176","endLine":2,"endColumn":25},{"ruleId":"173","severity":1,"message":"192","line":2,"column":27,"nodeType":"175","messageId":"176","endLine":2,"endColumn":35},{"ruleId":"178","severity":1,"message":"179","line":22,"column":29,"nodeType":"180","endLine":22,"endColumn":51},{"ruleId":"181","severity":1,"message":"182","line":22,"column":37,"nodeType":"183","messageId":"184","endLine":22,"endColumn":50},{"ruleId":"178","severity":1,"message":"179","line":28,"column":29,"nodeType":"180","endLine":28,"endColumn":51},{"ruleId":"181","severity":1,"message":"182","line":28,"column":37,"nodeType":"183","messageId":"184","endLine":28,"endColumn":50},{"ruleId":"178","severity":1,"message":"179","line":37,"column":29,"nodeType":"180","endLine":37,"endColumn":51},{"ruleId":"181","severity":1,"message":"182","line":37,"column":37,"nodeType":"183","messageId":"184","endLine":37,"endColumn":50},{"ruleId":"178","severity":1,"message":"179","line":12,"column":17,"nodeType":"180","endLine":12,"endColumn":60},{"ruleId":"181","severity":1,"message":"182","line":12,"column":25,"nodeType":"183","messageId":"184","endLine":12,"endColumn":38},{"ruleId":"178","severity":1,"message":"179","line":13,"column":15,"nodeType":"180","endLine":13,"endColumn":58},{"ruleId":"181","severity":1,"message":"182","line":13,"column":23,"nodeType":"183","messageId":"184","endLine":13,"endColumn":36},{"ruleId":"178","severity":1,"message":"179","line":16,"column":17,"nodeType":"180","endLine":16,"endColumn":62},{"ruleId":"181","severity":1,"message":"182","line":16,"column":25,"nodeType":"183","messageId":"184","endLine":16,"endColumn":38},{"ruleId":"178","severity":1,"message":"179","line":21,"column":15,"nodeType":"180","endLine":21,"endColumn":37},{"ruleId":"181","severity":1,"message":"182","line":21,"column":23,"nodeType":"183","messageId":"184","endLine":21,"endColumn":36},{"ruleId":"178","severity":1,"message":"179","line":22,"column":15,"nodeType":"180","endLine":22,"endColumn":37},{"ruleId":"181","severity":1,"message":"182","line":22,"column":23,"nodeType":"183","messageId":"184","endLine":22,"endColumn":36},{"ruleId":"178","severity":1,"message":"179","line":23,"column":15,"nodeType":"180","endLine":23,"endColumn":37},{"ruleId":"181","severity":1,"message":"182","line":23,"column":23,"nodeType":"183","messageId":"184","endLine":23,"endColumn":36},{"ruleId":"178","severity":1,"message":"179","line":24,"column":15,"nodeType":"180","endLine":24,"endColumn":37},{"ruleId":"181","severity":1,"message":"182","line":24,"column":23,"nodeType":"183","messageId":"184","endLine":24,"endColumn":36},{"ruleId":"178","severity":1,"message":"179","line":42,"column":61,"nodeType":"180","endLine":42,"endColumn":105},{"ruleId":"181","severity":1,"message":"182","line":42,"column":69,"nodeType":"183","messageId":"184","endLine":42,"endColumn":82},{"ruleId":"178","severity":1,"message":"179","line":51,"column":21,"nodeType":"180","endLine":51,"endColumn":67},{"ruleId":"181","severity":1,"message":"182","line":51,"column":29,"nodeType":"183","messageId":"184","endLine":51,"endColumn":42},{"ruleId":"178","severity":1,"message":"179","line":52,"column":21,"nodeType":"180","endLine":52,"endColumn":77},{"ruleId":"181","severity":1,"message":"182","line":52,"column":29,"nodeType":"183","messageId":"184","endLine":52,"endColumn":42},{"ruleId":"178","severity":1,"message":"179","line":54,"column":25,"nodeType":"180","endLine":54,"endColumn":71},{"ruleId":"181","severity":1,"message":"182","line":54,"column":33,"nodeType":"183","messageId":"184","endLine":54,"endColumn":46},{"ruleId":"173","severity":1,"message":"191","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":14},{"ruleId":"173","severity":1,"message":"193","line":10,"column":10,"nodeType":"175","messageId":"176","endLine":10,"endColumn":29},{"ruleId":"173","severity":1,"message":"174","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"194","line":9,"column":10,"nodeType":"175","messageId":"176","endLine":9,"endColumn":15},{"ruleId":"173","severity":1,"message":"195","line":12,"column":23,"nodeType":"175","messageId":"176","endLine":12,"endColumn":37},{"ruleId":"173","severity":1,"message":"196","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":18},{"ruleId":"173","severity":1,"message":"197","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":13},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["198"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Select' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'BrowserRouter' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'ReactDOM' is defined but never used.","'isUsernameAvailable' is assigned a value but never used.","'error' is assigned a value but never used.","'setCurrentDate' is assigned a value but never used.","'useQuery' is defined but never used.","'month' is defined but never used.","no-object-constructor"]